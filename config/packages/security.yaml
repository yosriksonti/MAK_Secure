security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: Email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\LoginAuthenticator
            user_checker: App\Security\UserChecker
            logout:
                path: logout
                target: login
    role_hierarchy:
        ROLE_ADMIN: ['ROLE_USER_ADMIN', 'ROLE_MODERATOR', 'ROLE_ADMIN']
        ROLE_DEVELOPER: [ROLE_ADMIN, ROLE_MODERATOR]
        ROLE_MODERATOR: ['ROLE_MODERATOR']
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/logout, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/front/, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/profile, roles: IS_AUTHENTICATED_FULLY, requires_channel: https }
        - { path: ^/preview, roles: IS_AUTHENTICATED_FULLY, requires_channel: https }
        - { path: ^/back, roles: ROLE_ADMIN, requires_channel: https }
        - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        


when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
